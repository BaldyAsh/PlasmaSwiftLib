{"Structs/TransactionOutput.html#/init(outputNumberInTx:receiverEthereumAddress:amount:)":{"name":"init(outputNumberInTx:receiverEthereumAddress:amount:)","abstract":"<p>Creates TransactionOutput object that can be spent as an input in a new transaction</p>","parent_name":"TransactionOutput"},"Structs/TransactionOutput.html#/s:14PlasmaSwiftLib17TransactionOutputV4dataAC10Foundation4DataV_tKcfc":{"name":"init(data:)","abstract":"<p>Creates TransactionOutput object that can be spent as an input in a new transaction</p>","parent_name":"TransactionOutput"},"Structs/TransactionOutput.html#/s:14PlasmaSwiftLib17TransactionOutputV9serialize10Foundation4DataVyKF":{"name":"serialize()","abstract":"<p>Serializes TransactionOutput</p>","parent_name":"TransactionOutput"},"Structs/TransactionOutput.html#/s:14PlasmaSwiftLib17TransactionOutputV13prepareForRLPSayyXlGyF":{"name":"prepareForRLP()","abstract":"<p>Plases TransactionOutput items in AnyObject array</p>","parent_name":"TransactionOutput"},"Structs/TransactionOutput.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"TransactionOutput"},"Structs/TransactionInput.html#/init(blockNumber:txNumberInBlock:outputNumberInTx:amount:)":{"name":"init(blockNumber:txNumberInBlock:outputNumberInTx:amount:)","abstract":"<p>Creates TransactionInput object</p>","parent_name":"TransactionInput"},"Structs/TransactionInput.html#/s:14PlasmaSwiftLib16TransactionInputV4dataAC10Foundation4DataV_tKcfc":{"name":"init(data:)","abstract":"<p>Creates TransactionInput object</p>","parent_name":"TransactionInput"},"Structs/TransactionInput.html#/s:14PlasmaSwiftLib16TransactionInputV9serialize10Foundation4DataVyKF":{"name":"serialize()","abstract":"<p>Serializes TransactionInput</p>","parent_name":"TransactionInput"},"Structs/TransactionInput.html#/s:14PlasmaSwiftLib16TransactionInputV13prepareForRLPSayyXlGyF":{"name":"prepareForRLP()","abstract":"<p>Plases TransactionInput items in AnyObject array</p>","parent_name":"TransactionInput"},"Structs/TransactionInput.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"TransactionInput"},"Structs/SignedTransaction.html#/sender":{"name":"sender","abstract":"<p>returns EthereumAddress of transaction sender</p>","parent_name":"SignedTransaction"},"Structs/SignedTransaction.html#/init(transaction:v:r:s:)":{"name":"init(transaction:v:r:s:)","abstract":"<p>Creates SignedTransaction object that implement signed transaction in Plasma</p>","parent_name":"SignedTransaction"},"Structs/SignedTransaction.html#/s:14PlasmaSwiftLib17SignedTransactionV4dataAC10Foundation4DataV_tKcfc":{"name":"init(data:)","abstract":"<p>Creates SignedTransaction object that implement signed transaction in Plasma</p>","parent_name":"SignedTransaction"},"Structs/SignedTransaction.html#/s:14PlasmaSwiftLib17SignedTransactionV13prepareForRLPSayyXlGyF":{"name":"prepareForRLP()","abstract":"<p>Plases SignedTransaction items in AnyObject array</p>","parent_name":"SignedTransaction"},"Structs/SignedTransaction.html#/s:14PlasmaSwiftLib17SignedTransactionV9serialize10Foundation4DataVyKF":{"name":"serialize()","abstract":"<p>Serializes SignedTransaction</p>","parent_name":"SignedTransaction"},"Structs/SignedTransaction.html#/recoverSender()":{"name":"recoverSender()","abstract":"<p>Deduces a sender from transaction signature</p>","parent_name":"SignedTransaction"},"Structs/SignedTransaction.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"SignedTransaction"},"Structs/BlockHeader.html#/init(blockNumber:numberOfTxInBlock:parentHash:merkleRootOfTheTxTree:v:r:s:)":{"name":"init(blockNumber:numberOfTxInBlock:parentHash:merkleRootOfTheTxTree:v:r:s:)","abstract":"<p>Creates BlockHeader object that implement Block header in Block object (first 137 bytes)</p>","parent_name":"BlockHeader"},"Structs/BlockHeader.html#/s:14PlasmaSwiftLib11BlockHeaderV4dataAC10Foundation4DataV_tKcfc":{"name":"init(data:)","abstract":"<p>Creates BlockHeader object that implement Block header in Block object (first 137 bytes)</p>","parent_name":"BlockHeader"},"Structs/BlockHeader.html#/s:14PlasmaSwiftLib11BlockHeaderV9serialize10Foundation4DataVyKF":{"name":"serialize()","abstract":"<p>Serializes BlockHeader</p>","parent_name":"BlockHeader"},"Structs/BlockHeader.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BlockHeader"},"Structs/BlockHeader.html#/s:14PlasmaSwiftLib11BlockHeaderV13printElementsyyF":{"name":"printElements()","abstract":"<p>Prinets elements of Block header</p>","parent_name":"BlockHeader"},"Structs/TreeContent.html#/s:14PlasmaSwiftLib11TreeContentV7getHashy10Foundation4DataVAA0D6HasherCF":{"name":"getHash(_:)","abstract":"<p>Hash of the Merkle tree content</p>","parent_name":"TreeContent"},"Structs/TreeContent.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"TreeContent"},"Structs/TreeContent.html":{"name":"TreeContent","abstract":"<p>Merkle Tree content</p>"},"Structs/BlockHeader.html":{"name":"BlockHeader","abstract":"<p>The header of Block (first 137 bytes)</p>"},"Structs.html#/s:14PlasmaSwiftLib0A8ContractV":{"name":"PlasmaContract","abstract":"<p>Specifies Plasma Contract address and ABI</p>"},"Structs/SignedTransaction.html":{"name":"SignedTransaction","abstract":"<p>An RLP encoded set that describes signed Transaction. Signature is based on EthereumPersonalHash(RLPEncode(Transaction))</p>"},"Structs/TransactionInput.html":{"name":"TransactionInput","abstract":"<p>An RLP encoded set that describes input in Transaction</p>"},"Structs/TransactionOutput.html":{"name":"TransactionOutput","abstract":"<p>An RLP encoded set that describes output in Transaction</p>"},"Enums.html#/s:14PlasmaSwiftLib0A14ContractMethodO":{"name":"PlasmaContractMethod","abstract":"<p>Preset of Plasma Contract methods</p>"},"Classes/Transaction.html#/s:14PlasmaSwiftLib11TransactionC0D4TypeO":{"name":"TransactionType","abstract":"<p>The type of transaction can be:","parent_name":"Transaction"},"Classes/Transaction.html#/s:14PlasmaSwiftLib11TransactionC6txType6inputs7outputsA2C0dF0O_SayAA0D5InputVGSayAA0D6OutputVGtKcfc":{"name":"init(txType:inputs:outputs:)","abstract":"<p>Creates Transaction object that implement unsigned transaction in Plasma</p>","parent_name":"Transaction"},"Classes/Transaction.html#/s:14PlasmaSwiftLib11TransactionC4dataAC10Foundation4DataV_tKcfc":{"name":"init(data:)","abstract":"<p>Creates Transaction object that implement unsigned transaction in Plasma</p>","parent_name":"Transaction"},"Classes/Transaction.html#/s:14PlasmaSwiftLib11TransactionC4sign10privateKey15useExtraEntropyAA06SignedD0V10Foundation4DataV_SbtKF":{"name":"sign(privateKey:useExtraEntropy:)","abstract":"<p>Performes signing of transaction</p>","parent_name":"Transaction"},"Classes/Transaction.html#/s:14PlasmaSwiftLib11TransactionC13prepareForRLPSayyXlGyF":{"name":"prepareForRLP()","abstract":"<p>Plases Transaction items in AnyObject array</p>","parent_name":"Transaction"},"Classes/Transaction.html#/s:14PlasmaSwiftLib11TransactionC9serialize10Foundation4DataVyKF":{"name":"serialize()","abstract":"<p>Serializes Transaction</p>","parent_name":"Transaction"},"Classes/Transaction.html#/mergeOutputs(untilMinAmount:)":{"name":"mergeOutputs(untilMinAmount:)","abstract":"<p>Merge outputs for minimum amount of one output. All outputs with amount less than min will be merged.</p>","parent_name":"Transaction"},"Classes/Transaction.html#/mergeOutputs(forMaxNumber:)":{"name":"mergeOutputs(forMaxNumber:)","abstract":"<p>Merge outputs for fixed number of outputs. Maximum is 3. Ð¡ombined outputs with a smaller amount.</p>","parent_name":"Transaction"},"Classes/Transaction.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Transaction"},"Classes/PlasmaUTXOs.html#/s:14PlasmaSwiftLib0A5UTXOsC4jsonACSDySSypG_tKcfc":{"name":"init(json:)","abstract":"<p>Init Plasma UTXO from json</p>","parent_name":"PlasmaUTXOs"},"Classes/PlasmaUTXOs.html#/s:14PlasmaSwiftLib0A5UTXOsC18toTransactionInputAA0fG0VyKF":{"name":"toTransactionInput()","abstract":"<p>Form Transaction Input from this UTXO</p>","parent_name":"PlasmaUTXOs"},"Classes/PlasmaUTXOs.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"PlasmaUTXOs"},"Classes/PlasmaService.html#/getUTXOs(for:onTestnet:)":{"name":"getUTXOs(for:onTestnet:)","abstract":"<p>Getting list of available UTXOs for the Ethereum address.</p>","parent_name":"PlasmaService"},"Classes/PlasmaService.html#/getBlock(onTestnet:number:)":{"name":"getBlock(onTestnet:number:)","abstract":"<p>Getting Plasma Block by its number.</p>","parent_name":"PlasmaService"},"Classes/PlasmaService.html#/s:14PlasmaSwiftLib0A7ServiceC9sendRawTX11transaction9onTestnetSbAA17SignedTransactionV_SbtKF":{"name":"sendRawTX(transaction:onTestnet:)","abstract":"<p>Sending transaction in Plasma.</p>","parent_name":"PlasmaService"},"Classes/Block.html#/s:14PlasmaSwiftLib5BlockC10merkleTreeAA09PaddabbleF0VSgvp":{"name":"merkleTree","abstract":"<p>Merkle tree of transactions in this Block</p>","parent_name":"Block"},"Classes/Block.html#/s:14PlasmaSwiftLib5BlockC11blockHeader18signedTransactionsAcA0dF0V_SayAA17SignedTransactionVGtcfc":{"name":"init(blockHeader:signedTransactions:)","abstract":"<p>Creates Block object that implement Plasma Block in storage</p>","parent_name":"Block"},"Classes/Block.html#/s:14PlasmaSwiftLib5BlockC4dataAC10Foundation4DataV_tKcfc":{"name":"init(data:)","abstract":"<p>Creates Block object that implement Plasma Block in storage</p>","parent_name":"Block"},"Classes/Block.html#/s:14PlasmaSwiftLib5BlockC9serialize10Foundation4DataVyKF":{"name":"serialize()","abstract":"<p>Serializes Block</p>","parent_name":"Block"},"Classes/Block.html#/s:14PlasmaSwiftLib5BlockC8getProof3forAA17SignedTransactionV2tx_10Foundation4DataV5prooftAG_tKF":{"name":"getProof(for:)","abstract":"<p>Proves that the transaction is in this Block transactions set</p>","parent_name":"Block"},"Classes/Block.html#/getProofForTransactionByNumber(txNumber:)":{"name":"getProofForTransactionByNumber(txNumber:)","abstract":"<p>Proves that the transaction is in this Block transactions set</p>","parent_name":"Block"},"Classes/Block.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Block"},"Classes/Block.html":{"name":"Block","abstract":"<p>Plasma Block in storage</p>"},"Classes/PlasmaService.html":{"name":"PlasmaService","abstract":"<p>A service that provides in-Plasma operations</p>"},"Classes.html#/s:14PlasmaSwiftLib0A4URLsC":{"name":"PlasmaURLs","abstract":"<p>Common URLs used in requests to Plasma</p>"},"Classes/PlasmaUTXOs.html":{"name":"PlasmaUTXOs","abstract":"<p>A Plasma UTXO implementation and its convenient methods</p>"},"Classes/Transaction.html":{"name":"Transaction","abstract":"<p>An RLP encoded set that describes unsigned Transaction</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}